package moonstone.selene.device.xbee.zcl.domain.se.price.data;

public enum UnitOfMeasure {
	KILOWATT_HOURS_AND_KILOWATTS_BINARY(0x00),
	CUBIC_METER_AND_CUBIC_METER_PER_HOUR_BINARY(0x01),
	CUBIC_FEET_AND_CUBIC_FEET_PER_HOUR_BINARY(0x02),
	CENTUM_CUBIC_FEET_AND_CENTUM_CUBIC_FEET_PER_HOUR_BINARY(0x03),
	US_GALLONS_AND_US_GALLONS_PER_HOUR_BINARY(0x04),
	IMPERIAL_GALLONS_AND_IMPERIAL_GALLONS_PER_HOUR_BINARY(0x05),
	BTUS_AND_BTU_H_BINARY(0x06),
	LITERS_AND_LITERS_PER_HOUR_BINARY(0x07),
	K_PA_GAUGE_BINARY(0x08),
	K_PA_ABSOLUTE_BINARY(0x09),
	THOUSAND_CUBIC_FEET_AND_THOUSAND_CUBIC_FEET_PER_HOUR_BINARY(0x0a),
	UNITLESS_BINARY(0x0b),
	MEGA_JOULE_AND_MEGA_JOULE_PER_SECOND_MW_BINARY(0x0c),
	K_VAR_AND_K_VARH_BINARY(0x0d),
	KILOWATT_HOURS_AND_KILOWATTS_BCD(0x80),
	CUBIC_METER_AND_CUBIC_METER_PER_HOUR_BCD(0x81),
	CUBIC_FEET_AND_CUBIC_FEET_PER_HOUR_BCD(0x82),
	CENTUM_CUBIC_FEET_AND_CENTUM_CUBIC_FEET_PER_HOUR_BCD(0x83),
	US_GALLONS_AND_US_GALLONS_PER_HOUR_BCD(0x84),
	IMPERIAL_GALLONS_AND_IMPERIAL_GALLONS_PER_HOUR_BCD(0x85),
	BTUS_AND_BTU_H_BCD(0x86),
	LITERS_AND_LITERS_PER_HOUR_BCD(0x87),
	K_PA_GAUGE_BCD(0x88),
	K_PA_ABSOLUTE_BCD(0x89),
	THOUSAND_CUBIC_FEET_AND_THOUSAND_CUBIC_FEET_PER_HOUR_BCD(0x8a),
	UNITLESS_BCD(0x8b),
	MEGA_JOULE_AND_MEGA_JOULE_PER_SECOND_MW_BCD(0x8c),
	K_VAR_AND_K_VARH_BCD(0x8d);

	private final int value;

	UnitOfMeasure(int value) {
		this.value = value;
	}

	public int getValue() {
		return value;
	}

	public static UnitOfMeasure getByValue(int value) {
		for (UnitOfMeasure item : values()) {
			if (item.value == value) {
				return item;
			}
		}
		return null;
	}
}
